// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: orders/orderspb/orders.proto

package orderspb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type KV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Value int64  `protobuf:"varint,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *KV) Reset() {
	*x = KV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_orderspb_orders_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KV) ProtoMessage() {}

func (x *KV) ProtoReflect() protoreflect.Message {
	mi := &file_orders_orderspb_orders_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KV.ProtoReflect.Descriptor instead.
func (*KV) Descriptor() ([]byte, []int) {
	return file_orders_orderspb_orders_proto_rawDescGZIP(), []int{0}
}

func (x *KV) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KV) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type AllRestaurantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantCount map[string]int64 `protobuf:"bytes,1,rep,name=restaurantCount,proto3" json:"restaurantCount,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *AllRestaurantRequest) Reset() {
	*x = AllRestaurantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_orderspb_orders_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllRestaurantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllRestaurantRequest) ProtoMessage() {}

func (x *AllRestaurantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orders_orderspb_orders_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllRestaurantRequest.ProtoReflect.Descriptor instead.
func (*AllRestaurantRequest) Descriptor() ([]byte, []int) {
	return file_orders_orderspb_orders_proto_rawDescGZIP(), []int{1}
}

func (x *AllRestaurantRequest) GetRestaurantCount() map[string]int64 {
	if x != nil {
		return x.RestaurantCount
	}
	return nil
}

type AllCuisineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CuisineCount map[string]int64 `protobuf:"bytes,1,rep,name=cuisineCount,proto3" json:"cuisineCount,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *AllCuisineRequest) Reset() {
	*x = AllCuisineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_orderspb_orders_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllCuisineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllCuisineRequest) ProtoMessage() {}

func (x *AllCuisineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orders_orderspb_orders_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllCuisineRequest.ProtoReflect.Descriptor instead.
func (*AllCuisineRequest) Descriptor() ([]byte, []int) {
	return file_orders_orderspb_orders_proto_rawDescGZIP(), []int{2}
}

func (x *AllCuisineRequest) GetCuisineCount() map[string]int64 {
	if x != nil {
		return x.CuisineCount
	}
	return nil
}

type AllStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateCuisineCount map[string]*AllCuisine `protobuf:"bytes,1,rep,name=stateCuisineCount,proto3" json:"stateCuisineCount,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AllStateRequest) Reset() {
	*x = AllStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_orderspb_orders_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllStateRequest) ProtoMessage() {}

func (x *AllStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orders_orderspb_orders_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllStateRequest.ProtoReflect.Descriptor instead.
func (*AllStateRequest) Descriptor() ([]byte, []int) {
	return file_orders_orderspb_orders_proto_rawDescGZIP(), []int{3}
}

func (x *AllStateRequest) GetStateCuisineCount() map[string]*AllCuisine {
	if x != nil {
		return x.StateCuisineCount
	}
	return nil
}

type TopNumRestaurantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num             string           `protobuf:"bytes,1,opt,name=num,proto3" json:"num,omitempty"`
	RestaurantCount map[string]int64 `protobuf:"bytes,2,rep,name=restaurantCount,proto3" json:"restaurantCount,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *TopNumRestaurantRequest) Reset() {
	*x = TopNumRestaurantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_orderspb_orders_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopNumRestaurantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopNumRestaurantRequest) ProtoMessage() {}

func (x *TopNumRestaurantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orders_orderspb_orders_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopNumRestaurantRequest.ProtoReflect.Descriptor instead.
func (*TopNumRestaurantRequest) Descriptor() ([]byte, []int) {
	return file_orders_orderspb_orders_proto_rawDescGZIP(), []int{4}
}

func (x *TopNumRestaurantRequest) GetNum() string {
	if x != nil {
		return x.Num
	}
	return ""
}

func (x *TopNumRestaurantRequest) GetRestaurantCount() map[string]int64 {
	if x != nil {
		return x.RestaurantCount
	}
	return nil
}

type TopNumCuisineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num          string           `protobuf:"bytes,1,opt,name=num,proto3" json:"num,omitempty"`
	CuisineCount map[string]int64 `protobuf:"bytes,2,rep,name=cuisineCount,proto3" json:"cuisineCount,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *TopNumCuisineRequest) Reset() {
	*x = TopNumCuisineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_orderspb_orders_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopNumCuisineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopNumCuisineRequest) ProtoMessage() {}

func (x *TopNumCuisineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orders_orderspb_orders_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopNumCuisineRequest.ProtoReflect.Descriptor instead.
func (*TopNumCuisineRequest) Descriptor() ([]byte, []int) {
	return file_orders_orderspb_orders_proto_rawDescGZIP(), []int{5}
}

func (x *TopNumCuisineRequest) GetNum() string {
	if x != nil {
		return x.Num
	}
	return ""
}

func (x *TopNumCuisineRequest) GetCuisineCount() map[string]int64 {
	if x != nil {
		return x.CuisineCount
	}
	return nil
}

type TopNumStatesCuisinesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num               string                 `protobuf:"bytes,1,opt,name=num,proto3" json:"num,omitempty"`
	State             string                 `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	StateCuisineCount map[string]*AllCuisine `protobuf:"bytes,3,rep,name=stateCuisineCount,proto3" json:"stateCuisineCount,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TopNumStatesCuisinesRequest) Reset() {
	*x = TopNumStatesCuisinesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_orderspb_orders_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopNumStatesCuisinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopNumStatesCuisinesRequest) ProtoMessage() {}

func (x *TopNumStatesCuisinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orders_orderspb_orders_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopNumStatesCuisinesRequest.ProtoReflect.Descriptor instead.
func (*TopNumStatesCuisinesRequest) Descriptor() ([]byte, []int) {
	return file_orders_orderspb_orders_proto_rawDescGZIP(), []int{6}
}

func (x *TopNumStatesCuisinesRequest) GetNum() string {
	if x != nil {
		return x.Num
	}
	return ""
}

func (x *TopNumStatesCuisinesRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *TopNumStatesCuisinesRequest) GetStateCuisineCount() map[string]*AllCuisine {
	if x != nil {
		return x.StateCuisineCount
	}
	return nil
}

type AddOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order             string                 `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	RestaurantCount   map[string]int64       `protobuf:"bytes,2,rep,name=restaurantCount,proto3" json:"restaurantCount,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	CuisineCount      map[string]int64       `protobuf:"bytes,3,rep,name=cuisineCount,proto3" json:"cuisineCount,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	StateCuisineCount map[string]*AllCuisine `protobuf:"bytes,4,rep,name=stateCuisineCount,proto3" json:"stateCuisineCount,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Orders            map[string]int64       `protobuf:"bytes,5,rep,name=orders,proto3" json:"orders,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *AddOrderRequest) Reset() {
	*x = AddOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_orderspb_orders_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderRequest) ProtoMessage() {}

func (x *AddOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orders_orderspb_orders_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderRequest.ProtoReflect.Descriptor instead.
func (*AddOrderRequest) Descriptor() ([]byte, []int) {
	return file_orders_orderspb_orders_proto_rawDescGZIP(), []int{7}
}

func (x *AddOrderRequest) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *AddOrderRequest) GetRestaurantCount() map[string]int64 {
	if x != nil {
		return x.RestaurantCount
	}
	return nil
}

func (x *AddOrderRequest) GetCuisineCount() map[string]int64 {
	if x != nil {
		return x.CuisineCount
	}
	return nil
}

func (x *AddOrderRequest) GetStateCuisineCount() map[string]*AllCuisine {
	if x != nil {
		return x.StateCuisineCount
	}
	return nil
}

func (x *AddOrderRequest) GetOrders() map[string]int64 {
	if x != nil {
		return x.Orders
	}
	return nil
}

type AllRestaurantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllRestaurant map[string]int64 `protobuf:"bytes,1,rep,name=allRestaurant,proto3" json:"allRestaurant,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *AllRestaurantResponse) Reset() {
	*x = AllRestaurantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_orderspb_orders_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllRestaurantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllRestaurantResponse) ProtoMessage() {}

func (x *AllRestaurantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orders_orderspb_orders_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllRestaurantResponse.ProtoReflect.Descriptor instead.
func (*AllRestaurantResponse) Descriptor() ([]byte, []int) {
	return file_orders_orderspb_orders_proto_rawDescGZIP(), []int{8}
}

func (x *AllRestaurantResponse) GetAllRestaurant() map[string]int64 {
	if x != nil {
		return x.AllRestaurant
	}
	return nil
}

type AllCuisineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllCuisine map[string]int64 `protobuf:"bytes,1,rep,name=allCuisine,proto3" json:"allCuisine,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *AllCuisineResponse) Reset() {
	*x = AllCuisineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_orderspb_orders_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllCuisineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllCuisineResponse) ProtoMessage() {}

func (x *AllCuisineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orders_orderspb_orders_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllCuisineResponse.ProtoReflect.Descriptor instead.
func (*AllCuisineResponse) Descriptor() ([]byte, []int) {
	return file_orders_orderspb_orders_proto_rawDescGZIP(), []int{9}
}

func (x *AllCuisineResponse) GetAllCuisine() map[string]int64 {
	if x != nil {
		return x.AllCuisine
	}
	return nil
}

type AllCuisine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllCuisine map[string]int64 `protobuf:"bytes,1,rep,name=allCuisine,proto3" json:"allCuisine,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *AllCuisine) Reset() {
	*x = AllCuisine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_orderspb_orders_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllCuisine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllCuisine) ProtoMessage() {}

func (x *AllCuisine) ProtoReflect() protoreflect.Message {
	mi := &file_orders_orderspb_orders_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllCuisine.ProtoReflect.Descriptor instead.
func (*AllCuisine) Descriptor() ([]byte, []int) {
	return file_orders_orderspb_orders_proto_rawDescGZIP(), []int{10}
}

func (x *AllCuisine) GetAllCuisine() map[string]int64 {
	if x != nil {
		return x.AllCuisine
	}
	return nil
}

type AllStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllState map[string]*AllCuisine `protobuf:"bytes,1,rep,name=allState,proto3" json:"allState,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AllStateResponse) Reset() {
	*x = AllStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_orderspb_orders_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllStateResponse) ProtoMessage() {}

func (x *AllStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orders_orderspb_orders_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllStateResponse.ProtoReflect.Descriptor instead.
func (*AllStateResponse) Descriptor() ([]byte, []int) {
	return file_orders_orderspb_orders_proto_rawDescGZIP(), []int{11}
}

func (x *AllStateResponse) GetAllState() map[string]*AllCuisine {
	if x != nil {
		return x.AllState
	}
	return nil
}

type TopNumRestaurantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopNumRestaurant map[string]string `protobuf:"bytes,1,rep,name=topNumRestaurant,proto3" json:"topNumRestaurant,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TopNumRestaurantResponse) Reset() {
	*x = TopNumRestaurantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_orderspb_orders_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopNumRestaurantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopNumRestaurantResponse) ProtoMessage() {}

func (x *TopNumRestaurantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orders_orderspb_orders_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopNumRestaurantResponse.ProtoReflect.Descriptor instead.
func (*TopNumRestaurantResponse) Descriptor() ([]byte, []int) {
	return file_orders_orderspb_orders_proto_rawDescGZIP(), []int{12}
}

func (x *TopNumRestaurantResponse) GetTopNumRestaurant() map[string]string {
	if x != nil {
		return x.TopNumRestaurant
	}
	return nil
}

type TopNumCuisineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopNumCuisine map[string]string `protobuf:"bytes,1,rep,name=topNumCuisine,proto3" json:"topNumCuisine,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TopNumCuisineResponse) Reset() {
	*x = TopNumCuisineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_orderspb_orders_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopNumCuisineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopNumCuisineResponse) ProtoMessage() {}

func (x *TopNumCuisineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orders_orderspb_orders_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopNumCuisineResponse.ProtoReflect.Descriptor instead.
func (*TopNumCuisineResponse) Descriptor() ([]byte, []int) {
	return file_orders_orderspb_orders_proto_rawDescGZIP(), []int{13}
}

func (x *TopNumCuisineResponse) GetTopNumCuisine() map[string]string {
	if x != nil {
		return x.TopNumCuisine
	}
	return nil
}

type TopNumStatesCuisinesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopNumState map[string]string `protobuf:"bytes,1,rep,name=topNumState,proto3" json:"topNumState,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TopNumStatesCuisinesResponse) Reset() {
	*x = TopNumStatesCuisinesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_orderspb_orders_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopNumStatesCuisinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopNumStatesCuisinesResponse) ProtoMessage() {}

func (x *TopNumStatesCuisinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orders_orderspb_orders_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopNumStatesCuisinesResponse.ProtoReflect.Descriptor instead.
func (*TopNumStatesCuisinesResponse) Descriptor() ([]byte, []int) {
	return file_orders_orderspb_orders_proto_rawDescGZIP(), []int{14}
}

func (x *TopNumStatesCuisinesResponse) GetTopNumState() map[string]string {
	if x != nil {
		return x.TopNumState
	}
	return nil
}

type AddOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response map[string]string `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AddOrderResponse) Reset() {
	*x = AddOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_orderspb_orders_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderResponse) ProtoMessage() {}

func (x *AddOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orders_orderspb_orders_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderResponse.ProtoReflect.Descriptor instead.
func (*AddOrderResponse) Descriptor() ([]byte, []int) {
	return file_orders_orderspb_orders_proto_rawDescGZIP(), []int{15}
}

func (x *AddOrderResponse) GetResponse() map[string]string {
	if x != nil {
		return x.Response
	}
	return nil
}

var File_orders_orderspb_orders_proto protoreflect.FileDescriptor

var file_orders_orderspb_orders_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x70,
	0x62, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x2c, 0x0a, 0x02, 0x4b, 0x56, 0x12, 0x10, 0x0a, 0x03,
	0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x14, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5b, 0x0a,
	0x0f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x42, 0x0a, 0x14, 0x52, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa5,
	0x01, 0x0a, 0x11, 0x41, 0x6c, 0x6c, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x0c, 0x63, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x63, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x3f, 0x0a, 0x11, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc9, 0x01, 0x0a, 0x0f, 0x41, 0x6c, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5c, 0x0a, 0x11, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x41,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x73, 0x74, 0x61, 0x74, 0x65, 0x43, 0x75, 0x69, 0x73,
	0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x58, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x6c, 0x6c,
	0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xcf, 0x01, 0x0a, 0x17, 0x54, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x75, 0x6d,
	0x12, 0x5e, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x54, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x1a, 0x42, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xbd, 0x01, 0x0a, 0x14, 0x54, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x43,
	0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12,
	0x52, 0x0a, 0x0c, 0x63, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x54,
	0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x63, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x1a, 0x3f, 0x0a, 0x11, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x89, 0x02, 0x0a, 0x1b, 0x54, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x73, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x68, 0x0a, 0x11,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x54, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x43, 0x75, 0x69,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x11, 0x73, 0x74, 0x61, 0x74, 0x65, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x58, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43,
	0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x43, 0x75,
	0x69, 0x73, 0x69, 0x6e, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x83, 0x05, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x56, 0x0a, 0x0f, 0x72, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x64, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x0c, 0x63, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0c, 0x63, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x5c, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x74, 0x65, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x75, 0x69, 0x73, 0x69,
	0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x3b, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x42, 0x0a, 0x14,
	0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x3f, 0x0a, 0x11, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x58, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb1, 0x01, 0x0a, 0x15, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x56, 0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x1a, 0x40, 0x0a, 0x12, 0x41, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9f, 0x01, 0x0a, 0x12, 0x41,
	0x6c, 0x6c, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4a, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x41,
	0x6c, 0x6c, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x1a, 0x3d, 0x0a,
	0x0f, 0x41, 0x6c, 0x6c, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8f, 0x01, 0x0a,
	0x0a, 0x41, 0x6c, 0x6c, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x61,
	0x6c, 0x6c, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x43, 0x75, 0x69, 0x73,
	0x69, 0x6e, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x1a,
	0x3d, 0x0a, 0x0f, 0x41, 0x6c, 0x6c, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa7,
	0x01, 0x0a, 0x10, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x41,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x61,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x4f, 0x0a, 0x0d, 0x41, 0x6c, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc3, 0x01, 0x0a, 0x18, 0x54, 0x6f, 0x70,
	0x4e, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x10, 0x74, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x52,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x52,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x54, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x74, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x52,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x1a, 0x43, 0x0a, 0x15, 0x54, 0x6f, 0x70,
	0x4e, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb1,
	0x01, 0x0a, 0x15, 0x54, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0d, 0x74, 0x6f, 0x70, 0x4e,
	0x75, 0x6d, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x43,
	0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54,
	0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0d, 0x74, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65,
	0x1a, 0x40, 0x0a, 0x12, 0x54, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xb7, 0x01, 0x0a, 0x1c, 0x54, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0b, 0x74, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x54, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x43, 0x75,
	0x69, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54,
	0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0b, 0x74, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x3e, 0x0a, 0x10,
	0x54, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x93, 0x01, 0x0a,
	0x10, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x64, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x3b, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x32, 0xd0, 0x04, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x12, 0x19, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x6c, 0x6c,
	0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x48, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x43, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x12, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x73, 0x12, 0x1f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x6f, 0x70,
	0x4e, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x6f,
	0x70, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x1c, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x43, 0x75, 0x69,
	0x73, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x43, 0x75, 0x69, 0x73, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x43,
	0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x54, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x43, 0x75, 0x69,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x11, 0x5a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_orders_orderspb_orders_proto_rawDescOnce sync.Once
	file_orders_orderspb_orders_proto_rawDescData = file_orders_orderspb_orders_proto_rawDesc
)

func file_orders_orderspb_orders_proto_rawDescGZIP() []byte {
	file_orders_orderspb_orders_proto_rawDescOnce.Do(func() {
		file_orders_orderspb_orders_proto_rawDescData = protoimpl.X.CompressGZIP(file_orders_orderspb_orders_proto_rawDescData)
	})
	return file_orders_orderspb_orders_proto_rawDescData
}

var file_orders_orderspb_orders_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_orders_orderspb_orders_proto_goTypes = []interface{}{
	(*KV)(nil),                           // 0: orders.KV
	(*AllRestaurantRequest)(nil),         // 1: orders.AllRestaurantRequest
	(*AllCuisineRequest)(nil),            // 2: orders.AllCuisineRequest
	(*AllStateRequest)(nil),              // 3: orders.AllStateRequest
	(*TopNumRestaurantRequest)(nil),      // 4: orders.TopNumRestaurantRequest
	(*TopNumCuisineRequest)(nil),         // 5: orders.TopNumCuisineRequest
	(*TopNumStatesCuisinesRequest)(nil),  // 6: orders.TopNumStatesCuisinesRequest
	(*AddOrderRequest)(nil),              // 7: orders.AddOrderRequest
	(*AllRestaurantResponse)(nil),        // 8: orders.AllRestaurantResponse
	(*AllCuisineResponse)(nil),           // 9: orders.AllCuisineResponse
	(*AllCuisine)(nil),                   // 10: orders.AllCuisine
	(*AllStateResponse)(nil),             // 11: orders.AllStateResponse
	(*TopNumRestaurantResponse)(nil),     // 12: orders.TopNumRestaurantResponse
	(*TopNumCuisineResponse)(nil),        // 13: orders.TopNumCuisineResponse
	(*TopNumStatesCuisinesResponse)(nil), // 14: orders.TopNumStatesCuisinesResponse
	(*AddOrderResponse)(nil),             // 15: orders.AddOrderResponse
	nil,                                  // 16: orders.AllRestaurantRequest.RestaurantCountEntry
	nil,                                  // 17: orders.AllCuisineRequest.CuisineCountEntry
	nil,                                  // 18: orders.AllStateRequest.StateCuisineCountEntry
	nil,                                  // 19: orders.TopNumRestaurantRequest.RestaurantCountEntry
	nil,                                  // 20: orders.TopNumCuisineRequest.CuisineCountEntry
	nil,                                  // 21: orders.TopNumStatesCuisinesRequest.StateCuisineCountEntry
	nil,                                  // 22: orders.AddOrderRequest.RestaurantCountEntry
	nil,                                  // 23: orders.AddOrderRequest.CuisineCountEntry
	nil,                                  // 24: orders.AddOrderRequest.StateCuisineCountEntry
	nil,                                  // 25: orders.AddOrderRequest.OrdersEntry
	nil,                                  // 26: orders.AllRestaurantResponse.AllRestaurantEntry
	nil,                                  // 27: orders.AllCuisineResponse.AllCuisineEntry
	nil,                                  // 28: orders.AllCuisine.AllCuisineEntry
	nil,                                  // 29: orders.AllStateResponse.AllStateEntry
	nil,                                  // 30: orders.TopNumRestaurantResponse.TopNumRestaurantEntry
	nil,                                  // 31: orders.TopNumCuisineResponse.TopNumCuisineEntry
	nil,                                  // 32: orders.TopNumStatesCuisinesResponse.TopNumStateEntry
	nil,                                  // 33: orders.AddOrderResponse.ResponseEntry
}
var file_orders_orderspb_orders_proto_depIdxs = []int32{
	16, // 0: orders.AllRestaurantRequest.restaurantCount:type_name -> orders.AllRestaurantRequest.RestaurantCountEntry
	17, // 1: orders.AllCuisineRequest.cuisineCount:type_name -> orders.AllCuisineRequest.CuisineCountEntry
	18, // 2: orders.AllStateRequest.stateCuisineCount:type_name -> orders.AllStateRequest.StateCuisineCountEntry
	19, // 3: orders.TopNumRestaurantRequest.restaurantCount:type_name -> orders.TopNumRestaurantRequest.RestaurantCountEntry
	20, // 4: orders.TopNumCuisineRequest.cuisineCount:type_name -> orders.TopNumCuisineRequest.CuisineCountEntry
	21, // 5: orders.TopNumStatesCuisinesRequest.stateCuisineCount:type_name -> orders.TopNumStatesCuisinesRequest.StateCuisineCountEntry
	22, // 6: orders.AddOrderRequest.restaurantCount:type_name -> orders.AddOrderRequest.RestaurantCountEntry
	23, // 7: orders.AddOrderRequest.cuisineCount:type_name -> orders.AddOrderRequest.CuisineCountEntry
	24, // 8: orders.AddOrderRequest.stateCuisineCount:type_name -> orders.AddOrderRequest.StateCuisineCountEntry
	25, // 9: orders.AddOrderRequest.orders:type_name -> orders.AddOrderRequest.OrdersEntry
	26, // 10: orders.AllRestaurantResponse.allRestaurant:type_name -> orders.AllRestaurantResponse.AllRestaurantEntry
	27, // 11: orders.AllCuisineResponse.allCuisine:type_name -> orders.AllCuisineResponse.AllCuisineEntry
	28, // 12: orders.AllCuisine.allCuisine:type_name -> orders.AllCuisine.AllCuisineEntry
	29, // 13: orders.AllStateResponse.allState:type_name -> orders.AllStateResponse.AllStateEntry
	30, // 14: orders.TopNumRestaurantResponse.topNumRestaurant:type_name -> orders.TopNumRestaurantResponse.TopNumRestaurantEntry
	31, // 15: orders.TopNumCuisineResponse.topNumCuisine:type_name -> orders.TopNumCuisineResponse.TopNumCuisineEntry
	32, // 16: orders.TopNumStatesCuisinesResponse.topNumState:type_name -> orders.TopNumStatesCuisinesResponse.TopNumStateEntry
	33, // 17: orders.AddOrderResponse.response:type_name -> orders.AddOrderResponse.ResponseEntry
	10, // 18: orders.AllStateRequest.StateCuisineCountEntry.value:type_name -> orders.AllCuisine
	10, // 19: orders.TopNumStatesCuisinesRequest.StateCuisineCountEntry.value:type_name -> orders.AllCuisine
	10, // 20: orders.AddOrderRequest.StateCuisineCountEntry.value:type_name -> orders.AllCuisine
	10, // 21: orders.AllStateResponse.AllStateEntry.value:type_name -> orders.AllCuisine
	1,  // 22: orders.OrdersService.GetAllRestaurant:input_type -> orders.AllRestaurantRequest
	2,  // 23: orders.OrdersService.GetAllCuisine:input_type -> orders.AllCuisineRequest
	3,  // 24: orders.OrdersService.GetAllStateCusine:input_type -> orders.AllStateRequest
	4,  // 25: orders.OrdersService.GetTopNumRestaurants:input_type -> orders.TopNumRestaurantRequest
	5,  // 26: orders.OrdersService.GetTopNumCuisines:input_type -> orders.TopNumCuisineRequest
	6,  // 27: orders.OrdersService.GetTopNumStatesCuisines:input_type -> orders.TopNumStatesCuisinesRequest
	7,  // 28: orders.OrdersService.AddOrder:input_type -> orders.AddOrderRequest
	8,  // 29: orders.OrdersService.GetAllRestaurant:output_type -> orders.AllRestaurantResponse
	9,  // 30: orders.OrdersService.GetAllCuisine:output_type -> orders.AllCuisineResponse
	11, // 31: orders.OrdersService.GetAllStateCusine:output_type -> orders.AllStateResponse
	12, // 32: orders.OrdersService.GetTopNumRestaurants:output_type -> orders.TopNumRestaurantResponse
	13, // 33: orders.OrdersService.GetTopNumCuisines:output_type -> orders.TopNumCuisineResponse
	14, // 34: orders.OrdersService.GetTopNumStatesCuisines:output_type -> orders.TopNumStatesCuisinesResponse
	15, // 35: orders.OrdersService.AddOrder:output_type -> orders.AddOrderResponse
	29, // [29:36] is the sub-list for method output_type
	22, // [22:29] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_orders_orderspb_orders_proto_init() }
func file_orders_orderspb_orders_proto_init() {
	if File_orders_orderspb_orders_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_orders_orderspb_orders_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_orderspb_orders_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllRestaurantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_orderspb_orders_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllCuisineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_orderspb_orders_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_orderspb_orders_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopNumRestaurantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_orderspb_orders_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopNumCuisineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_orderspb_orders_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopNumStatesCuisinesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_orderspb_orders_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_orderspb_orders_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllRestaurantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_orderspb_orders_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllCuisineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_orderspb_orders_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllCuisine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_orderspb_orders_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_orderspb_orders_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopNumRestaurantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_orderspb_orders_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopNumCuisineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_orderspb_orders_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopNumStatesCuisinesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_orderspb_orders_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_orders_orderspb_orders_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_orders_orderspb_orders_proto_goTypes,
		DependencyIndexes: file_orders_orderspb_orders_proto_depIdxs,
		MessageInfos:      file_orders_orderspb_orders_proto_msgTypes,
	}.Build()
	File_orders_orderspb_orders_proto = out.File
	file_orders_orderspb_orders_proto_rawDesc = nil
	file_orders_orderspb_orders_proto_goTypes = nil
	file_orders_orderspb_orders_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OrdersServiceClient is the client API for OrdersService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrdersServiceClient interface {
	GetAllRestaurant(ctx context.Context, in *AllRestaurantRequest, opts ...grpc.CallOption) (*AllRestaurantResponse, error)
	GetAllCuisine(ctx context.Context, in *AllCuisineRequest, opts ...grpc.CallOption) (*AllCuisineResponse, error)
	GetAllStateCusine(ctx context.Context, in *AllStateRequest, opts ...grpc.CallOption) (*AllStateResponse, error)
	GetTopNumRestaurants(ctx context.Context, in *TopNumRestaurantRequest, opts ...grpc.CallOption) (*TopNumRestaurantResponse, error)
	GetTopNumCuisines(ctx context.Context, in *TopNumCuisineRequest, opts ...grpc.CallOption) (*TopNumCuisineResponse, error)
	GetTopNumStatesCuisines(ctx context.Context, in *TopNumStatesCuisinesRequest, opts ...grpc.CallOption) (*TopNumStatesCuisinesResponse, error)
	AddOrder(ctx context.Context, in *AddOrderRequest, opts ...grpc.CallOption) (*AddOrderResponse, error)
}

type ordersServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOrdersServiceClient(cc grpc.ClientConnInterface) OrdersServiceClient {
	return &ordersServiceClient{cc}
}

func (c *ordersServiceClient) GetAllRestaurant(ctx context.Context, in *AllRestaurantRequest, opts ...grpc.CallOption) (*AllRestaurantResponse, error) {
	out := new(AllRestaurantResponse)
	err := c.cc.Invoke(ctx, "/orders.OrdersService/GetAllRestaurant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) GetAllCuisine(ctx context.Context, in *AllCuisineRequest, opts ...grpc.CallOption) (*AllCuisineResponse, error) {
	out := new(AllCuisineResponse)
	err := c.cc.Invoke(ctx, "/orders.OrdersService/GetAllCuisine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) GetAllStateCusine(ctx context.Context, in *AllStateRequest, opts ...grpc.CallOption) (*AllStateResponse, error) {
	out := new(AllStateResponse)
	err := c.cc.Invoke(ctx, "/orders.OrdersService/GetAllStateCusine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) GetTopNumRestaurants(ctx context.Context, in *TopNumRestaurantRequest, opts ...grpc.CallOption) (*TopNumRestaurantResponse, error) {
	out := new(TopNumRestaurantResponse)
	err := c.cc.Invoke(ctx, "/orders.OrdersService/GetTopNumRestaurants", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) GetTopNumCuisines(ctx context.Context, in *TopNumCuisineRequest, opts ...grpc.CallOption) (*TopNumCuisineResponse, error) {
	out := new(TopNumCuisineResponse)
	err := c.cc.Invoke(ctx, "/orders.OrdersService/GetTopNumCuisines", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) GetTopNumStatesCuisines(ctx context.Context, in *TopNumStatesCuisinesRequest, opts ...grpc.CallOption) (*TopNumStatesCuisinesResponse, error) {
	out := new(TopNumStatesCuisinesResponse)
	err := c.cc.Invoke(ctx, "/orders.OrdersService/GetTopNumStatesCuisines", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) AddOrder(ctx context.Context, in *AddOrderRequest, opts ...grpc.CallOption) (*AddOrderResponse, error) {
	out := new(AddOrderResponse)
	err := c.cc.Invoke(ctx, "/orders.OrdersService/AddOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrdersServiceServer is the server API for OrdersService service.
type OrdersServiceServer interface {
	GetAllRestaurant(context.Context, *AllRestaurantRequest) (*AllRestaurantResponse, error)
	GetAllCuisine(context.Context, *AllCuisineRequest) (*AllCuisineResponse, error)
	GetAllStateCusine(context.Context, *AllStateRequest) (*AllStateResponse, error)
	GetTopNumRestaurants(context.Context, *TopNumRestaurantRequest) (*TopNumRestaurantResponse, error)
	GetTopNumCuisines(context.Context, *TopNumCuisineRequest) (*TopNumCuisineResponse, error)
	GetTopNumStatesCuisines(context.Context, *TopNumStatesCuisinesRequest) (*TopNumStatesCuisinesResponse, error)
	AddOrder(context.Context, *AddOrderRequest) (*AddOrderResponse, error)
}

// UnimplementedOrdersServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOrdersServiceServer struct {
}

func (*UnimplementedOrdersServiceServer) GetAllRestaurant(context.Context, *AllRestaurantRequest) (*AllRestaurantResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllRestaurant not implemented")
}
func (*UnimplementedOrdersServiceServer) GetAllCuisine(context.Context, *AllCuisineRequest) (*AllCuisineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllCuisine not implemented")
}
func (*UnimplementedOrdersServiceServer) GetAllStateCusine(context.Context, *AllStateRequest) (*AllStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllStateCusine not implemented")
}
func (*UnimplementedOrdersServiceServer) GetTopNumRestaurants(context.Context, *TopNumRestaurantRequest) (*TopNumRestaurantResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTopNumRestaurants not implemented")
}
func (*UnimplementedOrdersServiceServer) GetTopNumCuisines(context.Context, *TopNumCuisineRequest) (*TopNumCuisineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTopNumCuisines not implemented")
}
func (*UnimplementedOrdersServiceServer) GetTopNumStatesCuisines(context.Context, *TopNumStatesCuisinesRequest) (*TopNumStatesCuisinesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTopNumStatesCuisines not implemented")
}
func (*UnimplementedOrdersServiceServer) AddOrder(context.Context, *AddOrderRequest) (*AddOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddOrder not implemented")
}

func RegisterOrdersServiceServer(s *grpc.Server, srv OrdersServiceServer) {
	s.RegisterService(&_OrdersService_serviceDesc, srv)
}

func _OrdersService_GetAllRestaurant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AllRestaurantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).GetAllRestaurant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/orders.OrdersService/GetAllRestaurant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).GetAllRestaurant(ctx, req.(*AllRestaurantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_GetAllCuisine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AllCuisineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).GetAllCuisine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/orders.OrdersService/GetAllCuisine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).GetAllCuisine(ctx, req.(*AllCuisineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_GetAllStateCusine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AllStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).GetAllStateCusine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/orders.OrdersService/GetAllStateCusine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).GetAllStateCusine(ctx, req.(*AllStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_GetTopNumRestaurants_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopNumRestaurantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).GetTopNumRestaurants(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/orders.OrdersService/GetTopNumRestaurants",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).GetTopNumRestaurants(ctx, req.(*TopNumRestaurantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_GetTopNumCuisines_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopNumCuisineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).GetTopNumCuisines(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/orders.OrdersService/GetTopNumCuisines",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).GetTopNumCuisines(ctx, req.(*TopNumCuisineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_GetTopNumStatesCuisines_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopNumStatesCuisinesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).GetTopNumStatesCuisines(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/orders.OrdersService/GetTopNumStatesCuisines",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).GetTopNumStatesCuisines(ctx, req.(*TopNumStatesCuisinesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_AddOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).AddOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/orders.OrdersService/AddOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).AddOrder(ctx, req.(*AddOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrdersService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "orders.OrdersService",
	HandlerType: (*OrdersServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAllRestaurant",
			Handler:    _OrdersService_GetAllRestaurant_Handler,
		},
		{
			MethodName: "GetAllCuisine",
			Handler:    _OrdersService_GetAllCuisine_Handler,
		},
		{
			MethodName: "GetAllStateCusine",
			Handler:    _OrdersService_GetAllStateCusine_Handler,
		},
		{
			MethodName: "GetTopNumRestaurants",
			Handler:    _OrdersService_GetTopNumRestaurants_Handler,
		},
		{
			MethodName: "GetTopNumCuisines",
			Handler:    _OrdersService_GetTopNumCuisines_Handler,
		},
		{
			MethodName: "GetTopNumStatesCuisines",
			Handler:    _OrdersService_GetTopNumStatesCuisines_Handler,
		},
		{
			MethodName: "AddOrder",
			Handler:    _OrdersService_AddOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orders/orderspb/orders.proto",
}
